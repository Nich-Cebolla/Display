#include ..\definitions\Define-Tab.ahk
#include ..\struct
#include RECT.ahk
#include POINT.ahk

/**
 * @description - Calculates a tab control's display area given a window rectangle, or calculates
 * the window rectangle that would correspond to a specified display area.
 *
 * The display area is the area within which the tab's controls are visible. The window area is the
 * window's entire area, including tabs and margins.
 *
 * {@link https://learn.microsoft.com/en-us/windows/win32/controls/tcm-adjustrect}.
 *
 * @param {Gui.Tab} Ctrl - The tab control.
 * @param {Boolean} Operation -
 * - If nonzero, `TabAdjustRect` takes an input `RECT` that defines the display area of the tab
 * control and modifies the values of the `RECT` object to define the window area.
 * - If falsy, `TabAdjustRect` takes a `RECT` that defines the tab's window area and modifies the
 * values of the `RECT` object to define the display area.
 * @param {RECT} RectObj - The `RECT` object that specifies either input value described above.
 */
TabAdjustWindowRect(Ctrl, Operation, RectObj) {
    return SendMessage(TCM_ADJUSTRECT, Operation, RectObj, Ctrl.hWnd, Ctrl.Gui.hWnd)
}

/**
 * @description - Calculates the top-left corner of a tab control's display area relative to the
 * gui window.
 *
 * The display area is the area within which the tab's controls are visible.
 *
 * @param {Gui.Tab} Ctrl - The tab control.
 * @param {VarRef} [OutTabDisplayRect] - A variable that will receive the `RECT` object representing
 * the tab's display area that is generated by the function.
 * @returns {POINT}
 */
TabGetDisplayTopLeft(Ctrl, &OutTabDisplayRect?) {
    Ctrl.GetPos(&tabx, &taby, &tabw, &tabh)
    OutTabDisplayRect := Rect(tabx, taby, tabw + tabx, taby + tabh)
    SendMessage(TCM_ADJUSTRECT, false, OutTabDisplayRect, Ctrl.hWnd, Ctrl.Gui.hWnd)
    return POINT(tabx + OutTabDisplayRect.l, taby + OutTabDisplayRect.t)
}
